/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.502 V17.11.0; 5G System; Session Management Services; Stage 3
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.502/
 *
 * API version: 1.2.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"time"
)

// Data within Create Response
type PduSessionCreatedData struct {
	PduSessionType         PduSessionType     `json:"pduSessionType" yaml:"pduSessionType" bson:"pduSessionType,omitempty"`
	SscMode                string             `json:"sscMode" yaml:"sscMode" bson:"sscMode,omitempty"`
	HcnTunnelInfo          *TunnelInfo        `json:"hcnTunnelInfo,omitempty" yaml:"hcnTunnelInfo" bson:"hcnTunnelInfo,omitempty"`
	CnTunnelInfo           *TunnelInfo        `json:"cnTunnelInfo,omitempty" yaml:"cnTunnelInfo" bson:"cnTunnelInfo,omitempty"`
	AdditionalCnTunnelInfo *TunnelInfo        `json:"additionalCnTunnelInfo,omitempty" yaml:"additionalCnTunnelInfo" bson:"additionalCnTunnelInfo,omitempty"`
	SessionAmbr            *Ambr              `json:"sessionAmbr,omitempty" yaml:"sessionAmbr" bson:"sessionAmbr,omitempty"`
	QosFlowsSetupList      []QosFlowSetupItem `json:"qosFlowsSetupList,omitempty" yaml:"qosFlowsSetupList" bson:"qosFlowsSetupList,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	HSmfInstanceId string `json:"hSmfInstanceId,omitempty" yaml:"hSmfInstanceId" bson:"hSmfInstanceId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	SmfInstanceId string `json:"smfInstanceId,omitempty" yaml:"smfInstanceId" bson:"smfInstanceId,omitempty"`
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	PduSessionId        int32   `json:"pduSessionId,omitempty" yaml:"pduSessionId" bson:"pduSessionId,omitempty"`
	SNssai              *Snssai `json:"sNssai,omitempty" yaml:"sNssai" bson:"sNssai,omitempty"`
	AdditionalSnssai    *Snssai `json:"additionalSnssai,omitempty" yaml:"additionalSnssai" bson:"additionalSnssai,omitempty"`
	EnablePauseCharging bool    `json:"enablePauseCharging,omitempty" yaml:"enablePauseCharging" bson:"enablePauseCharging,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	UeIpv4Address string           `json:"ueIpv4Address,omitempty" yaml:"ueIpv4Address" bson:"ueIpv4Address,omitempty"`
	UeIpv6Prefix  string           `json:"ueIpv6Prefix,omitempty" yaml:"ueIpv6Prefix" bson:"ueIpv6Prefix,omitempty"`
	N1SmInfoToUe  *RefToBinaryData `json:"n1SmInfoToUe,omitempty" yaml:"n1SmInfoToUe" bson:"n1SmInfoToUe,omitempty"`
	EpsPdnCnxInfo *EpsPdnCnxInfo   `json:"epsPdnCnxInfo,omitempty" yaml:"epsPdnCnxInfo" bson:"epsPdnCnxInfo,omitempty"`
	EpsBearerInfo []EpsBearerInfo  `json:"epsBearerInfo,omitempty" yaml:"epsBearerInfo" bson:"epsBearerInfo,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures               string                        `json:"supportedFeatures,omitempty" yaml:"supportedFeatures" bson:"supportedFeatures,omitempty"`
	MaxIntegrityProtectedDataRate   MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRate,omitempty" yaml:"maxIntegrityProtectedDataRate" bson:"maxIntegrityProtectedDataRate,omitempty"`
	MaxIntegrityProtectedDataRateDl MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateDl,omitempty" yaml:"maxIntegrityProtectedDataRateDl" bson:"maxIntegrityProtectedDataRateDl,omitempty"`
	AlwaysOnGranted                 bool                          `json:"alwaysOnGranted,omitempty" yaml:"alwaysOnGranted" bson:"alwaysOnGranted,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	Gpsi                   string                                      `json:"gpsi,omitempty" yaml:"gpsi" bson:"gpsi,omitempty"`
	UpSecurity             *UpSecurity                                 `json:"upSecurity,omitempty" yaml:"upSecurity" bson:"upSecurity,omitempty"`
	RoamingChargingProfile *ChfConvergedChargingRoamingChargingProfile `json:"roamingChargingProfile,omitempty" yaml:"roamingChargingProfile" bson:"roamingChargingProfile,omitempty"`
	HSmfServiceInstanceId  string                                      `json:"hSmfServiceInstanceId,omitempty" yaml:"hSmfServiceInstanceId" bson:"hSmfServiceInstanceId,omitempty"`
	SmfServiceInstanceId   string                                      `json:"smfServiceInstanceId,omitempty" yaml:"smfServiceInstanceId" bson:"smfServiceInstanceId,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RecoveryTime                *time.Time `json:"recoveryTime,omitempty" yaml:"recoveryTime" bson:"recoveryTime,omitempty"`
	DnaiList                    []string   `json:"dnaiList,omitempty" yaml:"dnaiList" bson:"dnaiList,omitempty"`
	Ipv6MultiHomingInd          bool       `json:"ipv6MultiHomingInd,omitempty" yaml:"ipv6MultiHomingInd" bson:"ipv6MultiHomingInd,omitempty"`
	MaAcceptedInd               bool       `json:"maAcceptedInd,omitempty" yaml:"maAcceptedInd" bson:"maAcceptedInd,omitempty"`
	HomeProvidedChargingId      string     `json:"homeProvidedChargingId,omitempty" yaml:"homeProvidedChargingId" bson:"homeProvidedChargingId,omitempty"`
	NefExtBufSupportInd         bool       `json:"nefExtBufSupportInd,omitempty" yaml:"nefExtBufSupportInd" bson:"nefExtBufSupportInd,omitempty"`
	SmallDataRateControlEnabled bool       `json:"smallDataRateControlEnabled,omitempty" yaml:"smallDataRateControlEnabled" bson:"smallDataRateControlEnabled,omitempty"`
	UeIpv6InterfaceId           string     `json:"ueIpv6InterfaceId,omitempty" yaml:"ueIpv6InterfaceId" bson:"ueIpv6InterfaceId,omitempty"`
	// Represents information that identifies which IP pool or external server is used to allocate the IP address.
	Ipv6Index               int32                           `json:"ipv6Index,omitempty" yaml:"ipv6Index" bson:"ipv6Index,omitempty"`
	DnAaaAddress            *SmfPduSessionIpAddress         `json:"dnAaaAddress,omitempty" yaml:"dnAaaAddress" bson:"dnAaaAddress,omitempty"`
	RedundantPduSessionInfo *RedundantPduSessionInformation `json:"redundantPduSessionInfo,omitempty" yaml:"redundantPduSessionInfo" bson:"redundantPduSessionInfo,omitempty"`
	NspuSupportInd          bool                            `json:"nspuSupportInd,omitempty" yaml:"nspuSupportInd" bson:"nspuSupportInd,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot string `json:"interPlmnApiRoot,omitempty" yaml:"interPlmnApiRoot" bson:"interPlmnApiRoot,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	IntraPlmnApiRoot string `json:"intraPlmnApiRoot,omitempty" yaml:"intraPlmnApiRoot" bson:"intraPlmnApiRoot,omitempty"`
}
