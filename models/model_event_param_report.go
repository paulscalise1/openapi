/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.520 V17.9.0; 5G System; Network Data Analytics Services.
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.520/
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

// Represents a summarized report for one event parameter.
type EventParamReport struct {
	// The name of the reported parameter.
	Name string `json:"name" yaml:"name" bson:"name,omitempty"`
	// The list of values of the reported parameter.
	Values []map[string]interface{} `json:"values" yaml:"values" bson:"values,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi         string                 `json:"supi,omitempty" yaml:"supi" bson:"supi,omitempty"`
	Area         *NetworkAreaInfo       `json:"area,omitempty" yaml:"area" bson:"area,omitempty"`
	Spacing      *NumberAverage         `json:"spacing,omitempty" yaml:"spacing" bson:"spacing,omitempty"`
	Duration     *NumberAverage         `json:"duration,omitempty" yaml:"duration" bson:"duration,omitempty"`
	AvgAndVar    *NumberAverage         `json:"avgAndVar,omitempty" yaml:"avgAndVar" bson:"avgAndVar,omitempty"`
	MostFreqVal  map[string]interface{} `json:"mostFreqVal,omitempty" yaml:"mostFreqVal" bson:"mostFreqVal,omitempty"`
	LeastFreqVal map[string]interface{} `json:"leastFreqVal,omitempty" yaml:"leastFreqVal" bson:"leastFreqVal,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Count int32 `json:"count,omitempty" yaml:"count" bson:"count,omitempty"`
	// The minimum value of the parameter.
	MinValue string `json:"minValue,omitempty" yaml:"minValue" bson:"minValue,omitempty"`
	// The maximum value of the parameter.
	MaxValue string `json:"maxValue,omitempty" yaml:"maxValue" bson:"maxValue,omitempty"`
}
