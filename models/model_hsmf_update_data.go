/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.502 V17.11.0; 5G System; Session Management Services; Stage 3
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.502/
 *
 * API version: 1.2.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

// Data within Update Request towards H-SMF, or from I-SMF to SMF
type HsmfUpdateData struct {
	RequestIndication RequestIndication `json:"requestIndication" yaml:"requestIndication" bson:"requestIndication,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.
	Pei                    string        `json:"pei,omitempty" yaml:"pei" bson:"pei,omitempty"`
	VcnTunnelInfo          *TunnelInfo   `json:"vcnTunnelInfo,omitempty" yaml:"vcnTunnelInfo" bson:"vcnTunnelInfo,omitempty"`
	IcnTunnelInfo          *TunnelInfo   `json:"icnTunnelInfo,omitempty" yaml:"icnTunnelInfo" bson:"icnTunnelInfo,omitempty"`
	AdditionalCnTunnelInfo *TunnelInfo   `json:"additionalCnTunnelInfo,omitempty" yaml:"additionalCnTunnelInfo" bson:"additionalCnTunnelInfo,omitempty"`
	ServingNetwork         *PlmnIdNid    `json:"servingNetwork,omitempty" yaml:"servingNetwork" bson:"servingNetwork,omitempty"`
	AnType                 AccessType    `json:"anType,omitempty" yaml:"anType" bson:"anType,omitempty"`
	AdditionalAnType       AccessType    `json:"additionalAnType,omitempty" yaml:"additionalAnType" bson:"additionalAnType,omitempty"`
	RatType                RatType       `json:"ratType,omitempty" yaml:"ratType" bson:"ratType,omitempty"`
	UeLocation             *UserLocation `json:"ueLocation,omitempty" yaml:"ueLocation" bson:"ueLocation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
	UeTimeZone    string        `json:"ueTimeZone,omitempty" yaml:"ueTimeZone" bson:"ueTimeZone,omitempty"`
	AddUeLocation *UserLocation `json:"addUeLocation,omitempty" yaml:"addUeLocation" bson:"addUeLocation,omitempty"`
	PauseCharging bool          `json:"pauseCharging,omitempty" yaml:"pauseCharging" bson:"pauseCharging,omitempty"`
	// Procedure Transaction Identifier
	Pti                     int32                  `json:"pti,omitempty" yaml:"pti" bson:"pti,omitempty"`
	N1SmInfoFromUe          *RefToBinaryData       `json:"n1SmInfoFromUe,omitempty" yaml:"n1SmInfoFromUe" bson:"n1SmInfoFromUe,omitempty"`
	UnknownN1SmInfo         *RefToBinaryData       `json:"unknownN1SmInfo,omitempty" yaml:"unknownN1SmInfo" bson:"unknownN1SmInfo,omitempty"`
	QosFlowsRelNotifyList   []QosFlowItem          `json:"qosFlowsRelNotifyList,omitempty" yaml:"qosFlowsRelNotifyList" bson:"qosFlowsRelNotifyList,omitempty"`
	QosFlowsNotifyList      []QosFlowNotifyItem    `json:"qosFlowsNotifyList,omitempty" yaml:"qosFlowsNotifyList" bson:"qosFlowsNotifyList,omitempty"`
	NotifyList              []PduSessionNotifyItem `json:"NotifyList,omitempty" yaml:"NotifyList" bson:"NotifyList,omitempty"`
	EpsBearerId             []int32                `json:"epsBearerId,omitempty" yaml:"epsBearerId" bson:"epsBearerId,omitempty"`
	HoPreparationIndication bool                   `json:"hoPreparationIndication,omitempty" yaml:"hoPreparationIndication" bson:"hoPreparationIndication,omitempty"`
	RevokeEbiList           []int32                `json:"revokeEbiList,omitempty" yaml:"revokeEbiList" bson:"revokeEbiList,omitempty"`
	Cause                   SmfPduSessionCause     `json:"cause,omitempty" yaml:"cause" bson:"cause,omitempty"`
	NgApCause               *NgApCause             `json:"ngApCause,omitempty" yaml:"ngApCause" bson:"ngApCause,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Var5gMmCauseValue       int32                       `json:"5gMmCauseValue,omitempty" yaml:"5gMmCauseValue" bson:"5gMmCauseValue,omitempty"`
	AlwaysOnRequested       bool                        `json:"alwaysOnRequested,omitempty" yaml:"alwaysOnRequested" bson:"alwaysOnRequested,omitempty"`
	EpsInterworkingInd      EpsInterworkingIndication   `json:"epsInterworkingInd,omitempty" yaml:"epsInterworkingInd" bson:"epsInterworkingInd,omitempty"`
	SecondaryRatUsageReport []SecondaryRatUsageReport   `json:"secondaryRatUsageReport,omitempty" yaml:"secondaryRatUsageReport" bson:"secondaryRatUsageReport,omitempty"`
	SecondaryRatUsageInfo   []SecondaryRatUsageInfo     `json:"secondaryRatUsageInfo,omitempty" yaml:"secondaryRatUsageInfo" bson:"secondaryRatUsageInfo,omitempty"`
	AnTypeCanBeChanged      bool                        `json:"anTypeCanBeChanged,omitempty" yaml:"anTypeCanBeChanged" bson:"anTypeCanBeChanged,omitempty"`
	MaReleaseInd            MaReleaseIndication         `json:"maReleaseInd,omitempty" yaml:"maReleaseInd" bson:"maReleaseInd,omitempty"`
	MaNwUpgradeInd          bool                        `json:"maNwUpgradeInd,omitempty" yaml:"maNwUpgradeInd" bson:"maNwUpgradeInd,omitempty"`
	MaRequestInd            bool                        `json:"maRequestInd,omitempty" yaml:"maRequestInd" bson:"maRequestInd,omitempty"`
	UnavailableAccessInd    UnavailableAccessIndication `json:"unavailableAccessInd,omitempty" yaml:"unavailableAccessInd" bson:"unavailableAccessInd,omitempty"`
	PsaInfo                 []PsaInformation            `json:"psaInfo,omitempty" yaml:"psaInfo" bson:"psaInfo,omitempty"`
	UlclBpInfo              *UlclBpInformation          `json:"ulclBpInfo,omitempty" yaml:"ulclBpInfo" bson:"ulclBpInfo,omitempty"`
	N4Info                  *N4Information              `json:"n4Info,omitempty" yaml:"n4Info" bson:"n4Info,omitempty"`
	N4InfoExt1              *N4Information              `json:"n4InfoExt1,omitempty" yaml:"n4InfoExt1" bson:"n4InfoExt1,omitempty"`
	N4InfoExt2              *N4Information              `json:"n4InfoExt2,omitempty" yaml:"n4InfoExt2" bson:"n4InfoExt2,omitempty"`
	PresenceInLadn          PresenceState               `json:"presenceInLadn,omitempty" yaml:"presenceInLadn" bson:"presenceInLadn,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	VsmfPduSessionUri string `json:"vsmfPduSessionUri,omitempty" yaml:"vsmfPduSessionUri" bson:"vsmfPduSessionUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	VsmfId                string `json:"vsmfId,omitempty" yaml:"vsmfId" bson:"vsmfId,omitempty"`
	VSmfServiceInstanceId string `json:"vSmfServiceInstanceId,omitempty" yaml:"vSmfServiceInstanceId" bson:"vSmfServiceInstanceId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	IsmfPduSessionUri string `json:"ismfPduSessionUri,omitempty" yaml:"ismfPduSessionUri" bson:"ismfPduSessionUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	IsmfId                string   `json:"ismfId,omitempty" yaml:"ismfId" bson:"ismfId,omitempty"`
	ISmfServiceInstanceId string   `json:"iSmfServiceInstanceId,omitempty" yaml:"iSmfServiceInstanceId" bson:"iSmfServiceInstanceId,omitempty"`
	DlServingPlmnRateCtl  int32    `json:"dlServingPlmnRateCtl,omitempty" yaml:"dlServingPlmnRateCtl" bson:"dlServingPlmnRateCtl,omitempty"`
	DnaiList              []string `json:"dnaiList,omitempty" yaml:"dnaiList" bson:"dnaiList,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures      string                                      `json:"supportedFeatures,omitempty" yaml:"supportedFeatures" bson:"supportedFeatures,omitempty"`
	RoamingChargingProfile *ChfConvergedChargingRoamingChargingProfile `json:"roamingChargingProfile,omitempty" yaml:"roamingChargingProfile" bson:"roamingChargingProfile,omitempty"`
	MoExpDataCounter       *MoExpDataCounter                           `json:"moExpDataCounter,omitempty" yaml:"moExpDataCounter" bson:"moExpDataCounter,omitempty"`
	VplmnQos               *VplmnQos                                   `json:"vplmnQos,omitempty" yaml:"vplmnQos" bson:"vplmnQos,omitempty"`
	SecurityResult         *SecurityResult                             `json:"securityResult,omitempty" yaml:"securityResult" bson:"securityResult,omitempty"`
	UpSecurityInfo         *UpSecurityInfo                             `json:"upSecurityInfo,omitempty" yaml:"upSecurityInfo" bson:"upSecurityInfo,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	AmfNfId                              string                        `json:"amfNfId,omitempty" yaml:"amfNfId" bson:"amfNfId,omitempty"`
	Guami                                *Guami                        `json:"guami,omitempty" yaml:"guami" bson:"guami,omitempty"`
	SecondaryRatUsageDataReportContainer []string                      `json:"secondaryRatUsageDataReportContainer,omitempty" yaml:"secondaryRatUsageDataReportContainer" bson:"secondaryRatUsageDataReportContainer,omitempty"`
	SmPolicyNotifyInd                    bool                          `json:"smPolicyNotifyInd,omitempty" yaml:"smPolicyNotifyInd" bson:"smPolicyNotifyInd,omitempty"`
	PcfUeCallbackInfo                    *PcfUeCallbackInfo            `json:"pcfUeCallbackInfo,omitempty" yaml:"pcfUeCallbackInfo" bson:"pcfUeCallbackInfo,omitempty"`
	SatelliteBackhaulCat                 SatelliteBackhaulCategory     `json:"satelliteBackhaulCat,omitempty" yaml:"satelliteBackhaulCat" bson:"satelliteBackhaulCat,omitempty"`
	MaxIntegrityProtectedDataRateUl      MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateUl,omitempty" yaml:"maxIntegrityProtectedDataRateUl" bson:"maxIntegrityProtectedDataRateUl,omitempty"`
	MaxIntegrityProtectedDataRateDl      MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateDl,omitempty" yaml:"maxIntegrityProtectedDataRateDl" bson:"maxIntegrityProtectedDataRateDl,omitempty"`
	UpCnxState                           UpCnxState                    `json:"upCnxState,omitempty" yaml:"upCnxState" bson:"upCnxState,omitempty"`
	DisasterRoamingInd                   bool                          `json:"disasterRoamingInd,omitempty" yaml:"disasterRoamingInd" bson:"disasterRoamingInd,omitempty"`
}
