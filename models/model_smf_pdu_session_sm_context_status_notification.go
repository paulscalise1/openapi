/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.502 V17.11.0; 5G System; Session Management Services; Stage 3
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.502/
 *
 * API version: 1.2.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

// Data within Notify SM Context Status Request
type SmfPduSessionSmContextStatusNotification struct {
	StatusInfo                        *StatusInfo          `json:"statusInfo" yaml:"statusInfo" bson:"statusInfo,omitempty"`
	SmallDataRateStatus               *SmallDataRateStatus `json:"smallDataRateStatus,omitempty" yaml:"smallDataRateStatus" bson:"smallDataRateStatus,omitempty"`
	ApnRateStatus                     *ApnRateStatus       `json:"apnRateStatus,omitempty" yaml:"apnRateStatus" bson:"apnRateStatus,omitempty"`
	DdnFailureStatus                  bool                 `json:"ddnFailureStatus,omitempty" yaml:"ddnFailureStatus" bson:"ddnFailureStatus,omitempty"`
	NotifyCorrelationIdsForddnFailure []string             `json:"notifyCorrelationIdsForddnFailure,omitempty" yaml:"notifyCorrelationIdsForddnFailure" bson:"notifyCorrelationIdsForddnFailure,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NewIntermediateSmfId string `json:"newIntermediateSmfId,omitempty" yaml:"newIntermediateSmfId" bson:"newIntermediateSmfId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NewSmfId string `json:"newSmfId,omitempty" yaml:"newSmfId" bson:"newSmfId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	NewSmfSetId string `json:"newSmfSetId,omitempty" yaml:"newSmfSetId" bson:"newSmfSetId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	OldSmfId string `json:"oldSmfId,omitempty" yaml:"oldSmfId" bson:"oldSmfId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	OldSmContextRef string `json:"oldSmContextRef,omitempty" yaml:"oldSmContextRef" bson:"oldSmContextRef,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	AltAnchorSmfUri string `json:"altAnchorSmfUri,omitempty" yaml:"altAnchorSmfUri" bson:"altAnchorSmfUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	AltAnchorSmfId string          `json:"altAnchorSmfId,omitempty" yaml:"altAnchorSmfId" bson:"altAnchorSmfId,omitempty"`
	TargetDnaiInfo *TargetDnaiInfo `json:"targetDnaiInfo,omitempty" yaml:"targetDnaiInfo" bson:"targetDnaiInfo,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	OldPduSessionRef string `json:"oldPduSessionRef,omitempty" yaml:"oldPduSessionRef" bson:"oldPduSessionRef,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot string `json:"interPlmnApiRoot,omitempty" yaml:"interPlmnApiRoot" bson:"interPlmnApiRoot,omitempty"`
}
