/*
 * Namf_Location
 *
 * AMF Location Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.518 V17.12.0; 5G System; Access and Mobility Management Services
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.518/
 *
 * API version: 1.2.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"time"
)

// Data within EventNotify notification
type NotifiedPosInfo struct {
	LocationEvent AmfLocationLocationEvent `json:"locationEvent" yaml:"locationEvent" bson:"locationEvent,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi string `json:"supi,omitempty" yaml:"supi" bson:"supi,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	Gpsi string `json:"gpsi,omitempty" yaml:"gpsi" bson:"gpsi,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.
	Pei                   string          `json:"pei,omitempty" yaml:"pei" bson:"pei,omitempty"`
	LocationEstimate      *GeographicArea `json:"locationEstimate,omitempty" yaml:"locationEstimate" bson:"locationEstimate,omitempty"`
	LocalLocationEstimate *LocalArea      `json:"localLocationEstimate,omitempty" yaml:"localLocationEstimate" bson:"localLocationEstimate,omitempty"`
	// Indicates value of the age of the location estimate.
	AgeOfLocationEstimate int32 `json:"ageOfLocationEstimate,omitempty" yaml:"ageOfLocationEstimate" bson:"ageOfLocationEstimate,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	TimestampOfLocationEstimate *time.Time                      `json:"timestampOfLocationEstimate,omitempty" yaml:"timestampOfLocationEstimate" bson:"timestampOfLocationEstimate,omitempty"`
	VelocityEstimate            *VelocityEstimate               `json:"velocityEstimate,omitempty" yaml:"velocityEstimate" bson:"velocityEstimate,omitempty"`
	PositioningDataList         []PositioningMethodAndUsage     `json:"positioningDataList,omitempty" yaml:"positioningDataList" bson:"positioningDataList,omitempty"`
	GnssPositioningDataList     []GnssPositioningMethodAndUsage `json:"gnssPositioningDataList,omitempty" yaml:"gnssPositioningDataList" bson:"gnssPositioningDataList,omitempty"`
	Ecgi                        *Ecgi                           `json:"ecgi,omitempty" yaml:"ecgi" bson:"ecgi,omitempty"`
	Ncgi                        *Ncgi                           `json:"ncgi,omitempty" yaml:"ncgi" bson:"ncgi,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	ServingNode string `json:"servingNode,omitempty" yaml:"servingNode" bson:"servingNode,omitempty"`
	// Fully Qualified Domain Name
	TargetMmeName string `json:"targetMmeName,omitempty" yaml:"targetMmeName" bson:"targetMmeName,omitempty"`
	// Fully Qualified Domain Name
	TargetMmeRealm string        `json:"targetMmeRealm,omitempty" yaml:"targetMmeRealm" bson:"targetMmeRealm,omitempty"`
	UtranSrvccInd  bool          `json:"utranSrvccInd,omitempty" yaml:"utranSrvccInd" bson:"utranSrvccInd,omitempty"`
	CivicAddress   *CivicAddress `json:"civicAddress,omitempty" yaml:"civicAddress" bson:"civicAddress,omitempty"`
	// Specifies the measured uncompensated atmospheric pressure.
	BarometricPressure int32 `json:"barometricPressure,omitempty" yaml:"barometricPressure" bson:"barometricPressure,omitempty"`
	// Indicates value of altitude.
	Altitude float64 `json:"altitude,omitempty" yaml:"altitude" bson:"altitude,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	HgmlcCallBackURI string `json:"hgmlcCallBackURI,omitempty" yaml:"hgmlcCallBackURI" bson:"hgmlcCallBackURI,omitempty"`
	// LDR Reference.
	LdrReference string `json:"ldrReference,omitempty" yaml:"ldrReference" bson:"ldrReference,omitempty"`
	// LMF identification.
	ServingLMFIdentification string                      `json:"servingLMFIdentification,omitempty" yaml:"servingLMFIdentification" bson:"servingLMFIdentification,omitempty"`
	TerminationCause         LmfLocationTerminationCause `json:"terminationCause,omitempty" yaml:"terminationCause" bson:"terminationCause,omitempty"`
	AchievedQos              *MinorLocationQoS           `json:"achievedQos,omitempty" yaml:"achievedQos" bson:"achievedQos,omitempty"`
	MscServerId              string                      `json:"mscServerId,omitempty" yaml:"mscServerId" bson:"mscServerId,omitempty"`
	HaGnssMetrics            *HighAccuracyGnssMetrics    `json:"haGnssMetrics,omitempty" yaml:"haGnssMetrics" bson:"haGnssMetrics,omitempty"`
}
