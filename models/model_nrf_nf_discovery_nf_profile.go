/*
 * NRF NFDiscovery Service
 *
 * NRF NFDiscovery Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.510 V17.12.0; 5G System; Network Function Repository Services; Stage 3
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.510/
 *
 * API version: 1.2.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"time"
)

// Information of an NF Instance discovered by the NRF
type NrfNfDiscoveryNfProfile struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NfInstanceId          string                  `json:"nfInstanceId" yaml:"nfInstanceId" bson:"nfInstanceId,omitempty"`
	NfInstanceName        string                  `json:"nfInstanceName,omitempty" yaml:"nfInstanceName" bson:"nfInstanceName,omitempty"`
	NfType                NrfNfManagementNfType   `json:"nfType" yaml:"nfType" bson:"nfType,omitempty"`
	NfStatus              NrfNfManagementNfStatus `json:"nfStatus" yaml:"nfStatus" bson:"nfStatus,omitempty"`
	CollocatedNfInstances []CollocatedNfInstance  `json:"collocatedNfInstances,omitempty" yaml:"collocatedNfInstances" bson:"collocatedNfInstances,omitempty"`
	PlmnList              []PlmnId                `json:"plmnList,omitempty" yaml:"plmnList" bson:"plmnList,omitempty"`
	SNssais               []ExtSnssai             `json:"sNssais,omitempty" yaml:"sNssais" bson:"sNssais,omitempty"`
	PerPlmnSnssaiList     []PlmnSnssai            `json:"perPlmnSnssaiList,omitempty" yaml:"perPlmnSnssaiList" bson:"perPlmnSnssaiList,omitempty"`
	NsiList               []string                `json:"nsiList,omitempty" yaml:"nsiList" bson:"nsiList,omitempty"`
	// Fully Qualified Domain Name
	Fqdn string `json:"fqdn,omitempty" yaml:"fqdn" bson:"fqdn,omitempty"`
	// Fully Qualified Domain Name
	InterPlmnFqdn string   `json:"interPlmnFqdn,omitempty" yaml:"interPlmnFqdn" bson:"interPlmnFqdn,omitempty"`
	Ipv4Addresses []string `json:"ipv4Addresses,omitempty" yaml:"ipv4Addresses" bson:"ipv4Addresses,omitempty"`
	Ipv6Addresses []string `json:"ipv6Addresses,omitempty" yaml:"ipv6Addresses" bson:"ipv6Addresses,omitempty"`
	Capacity      int32    `json:"capacity,omitempty" yaml:"capacity" bson:"capacity,omitempty"`
	Load          int32    `json:"load,omitempty" yaml:"load" bson:"load,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	LoadTimeStamp *time.Time `json:"loadTimeStamp,omitempty" yaml:"loadTimeStamp" bson:"loadTimeStamp,omitempty"`
	Locality      string     `json:"locality,omitempty" yaml:"locality" bson:"locality,omitempty"`
	Priority      int32      `json:"priority,omitempty" yaml:"priority" bson:"priority,omitempty"`
	UdrInfo       *UdrInfo   `json:"udrInfo,omitempty" yaml:"udrInfo" bson:"udrInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdrInfo
	UdrInfoList map[string]UdrInfo `json:"udrInfoList,omitempty" yaml:"udrInfoList" bson:"udrInfoList,omitempty"`
	UdmInfo     *UdmInfo           `json:"udmInfo,omitempty" yaml:"udmInfo" bson:"udmInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdmInfo
	UdmInfoList map[string]UdmInfo `json:"udmInfoList,omitempty" yaml:"udmInfoList" bson:"udmInfoList,omitempty"`
	AusfInfo    *AusfInfo          `json:"ausfInfo,omitempty" yaml:"ausfInfo" bson:"ausfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AusfInfo
	AusfInfoList map[string]AusfInfo     `json:"ausfInfoList,omitempty" yaml:"ausfInfoList" bson:"ausfInfoList,omitempty"`
	AmfInfo      *NrfNfManagementAmfInfo `json:"amfInfo,omitempty" yaml:"amfInfo" bson:"amfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AmfInfo
	AmfInfoList map[string]NrfNfManagementAmfInfo `json:"amfInfoList,omitempty" yaml:"amfInfoList" bson:"amfInfoList,omitempty"`
	SmfInfo     *SmfInfo                          `json:"smfInfo,omitempty" yaml:"smfInfo" bson:"smfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of SmfInfo
	SmfInfoList map[string]SmfInfo `json:"smfInfoList,omitempty" yaml:"smfInfoList" bson:"smfInfoList,omitempty"`
	UpfInfo     *UpfInfo           `json:"upfInfo,omitempty" yaml:"upfInfo" bson:"upfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UpfInfo
	UpfInfoList map[string]UpfInfo `json:"upfInfoList,omitempty" yaml:"upfInfoList" bson:"upfInfoList,omitempty"`
	PcfInfo     *PcfInfo           `json:"pcfInfo,omitempty" yaml:"pcfInfo" bson:"pcfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcfInfo
	PcfInfoList map[string]PcfInfo      `json:"pcfInfoList,omitempty" yaml:"pcfInfoList" bson:"pcfInfoList,omitempty"`
	BsfInfo     *NrfNfManagementBsfInfo `json:"bsfInfo,omitempty" yaml:"bsfInfo" bson:"bsfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of BsfInfo
	BsfInfoList map[string]NrfNfManagementBsfInfo `json:"bsfInfoList,omitempty" yaml:"bsfInfoList" bson:"bsfInfoList,omitempty"`
	ChfInfo     *ChfInfo                          `json:"chfInfo,omitempty" yaml:"chfInfo" bson:"chfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of ChfInfo
	ChfInfoList map[string]ChfInfo `json:"chfInfoList,omitempty" yaml:"chfInfoList" bson:"chfInfoList,omitempty"`
	UdsfInfo    *UdsfInfo          `json:"udsfInfo,omitempty" yaml:"udsfInfo" bson:"udsfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdsfInfo
	UdsfInfoList map[string]UdsfInfo `json:"udsfInfoList,omitempty" yaml:"udsfInfoList" bson:"udsfInfoList,omitempty"`
	NwdafInfo    *NwdafInfo          `json:"nwdafInfo,omitempty" yaml:"nwdafInfo" bson:"nwdafInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NwdafInfo
	NwdafInfoList map[string]NwdafInfo `json:"nwdafInfoList,omitempty" yaml:"nwdafInfoList" bson:"nwdafInfoList,omitempty"`
	NefInfo       *NefInfo             `json:"nefInfo,omitempty" yaml:"nefInfo" bson:"nefInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcscfInfo
	PcscfInfoList map[string]PcscfInfo `json:"pcscfInfoList,omitempty" yaml:"pcscfInfoList" bson:"pcscfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of HssInfo
	HssInfoList map[string]HssInfo     `json:"hssInfoList,omitempty" yaml:"hssInfoList" bson:"hssInfoList,omitempty"`
	CustomInfo  map[string]interface{} `json:"customInfo,omitempty" yaml:"customInfo" bson:"customInfo,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RecoveryTime         *time.Time                `json:"recoveryTime,omitempty" yaml:"recoveryTime" bson:"recoveryTime,omitempty"`
	NfServicePersistence bool                      `json:"nfServicePersistence,omitempty" yaml:"nfServicePersistence" bson:"nfServicePersistence,omitempty"`
	NfServices           []NrfNfDiscoveryNfService `json:"nfServices,omitempty" yaml:"nfServices" bson:"nfServices,omitempty"`
	// A map (list of key-value pairs) where serviceInstanceId serves as key of NFService
	NfServiceList                    map[string]NrfNfDiscoveryNfService `json:"nfServiceList,omitempty" yaml:"nfServiceList" bson:"nfServiceList,omitempty"`
	DefaultNotificationSubscriptions []DefaultNotificationSubscription  `json:"defaultNotificationSubscriptions,omitempty" yaml:"defaultNotificationSubscriptions" bson:"defaultNotificationSubscriptions,omitempty"`
	LmfInfo                          *LmfInfo                           `json:"lmfInfo,omitempty" yaml:"lmfInfo" bson:"lmfInfo,omitempty"`
	GmlcInfo                         *GmlcInfo                          `json:"gmlcInfo,omitempty" yaml:"gmlcInfo" bson:"gmlcInfo,omitempty"`
	SnpnList                         []PlmnIdNid                        `json:"snpnList,omitempty" yaml:"snpnList" bson:"snpnList,omitempty"`
	NfSetIdList                      []string                           `json:"nfSetIdList,omitempty" yaml:"nfSetIdList" bson:"nfSetIdList,omitempty"`
	ServingScope                     []string                           `json:"servingScope,omitempty" yaml:"servingScope" bson:"servingScope,omitempty"`
	LcHSupportInd                    bool                               `json:"lcHSupportInd,omitempty" yaml:"lcHSupportInd" bson:"lcHSupportInd,omitempty"`
	OlcHSupportInd                   bool                               `json:"olcHSupportInd,omitempty" yaml:"olcHSupportInd" bson:"olcHSupportInd,omitempty"`
	// A map (list of key-value pairs) where NfSetId serves as key of DateTime
	NfSetRecoveryTimeList map[string]time.Time `json:"nfSetRecoveryTimeList,omitempty" yaml:"nfSetRecoveryTimeList" bson:"nfSetRecoveryTimeList,omitempty"`
	// A map (list of key-value pairs) where NfServiceSetId serves as key of DateTime
	ServiceSetRecoveryTimeList map[string]time.Time `json:"serviceSetRecoveryTimeList,omitempty" yaml:"serviceSetRecoveryTimeList" bson:"serviceSetRecoveryTimeList,omitempty"`
	ScpDomains                 []string             `json:"scpDomains,omitempty" yaml:"scpDomains" bson:"scpDomains,omitempty"`
	ScpInfo                    *ScpInfo             `json:"scpInfo,omitempty" yaml:"scpInfo" bson:"scpInfo,omitempty"`
	SeppInfo                   *SeppInfo            `json:"seppInfo,omitempty" yaml:"seppInfo" bson:"seppInfo,omitempty"`
	// Vendor ID of the NF Service instance (Private Enterprise Number assigned by IANA)
	VendorId string `json:"vendorId,omitempty" yaml:"vendorId" bson:"vendorId,omitempty"`
	// The key of the map is the IANA-assigned SMI Network Management Private Enterprise Codes
	SupportedVendorSpecificFeatures map[string][]VendorSpecificFeature `json:"supportedVendorSpecificFeatures,omitempty" yaml:"supportedVendorSpecificFeatures" bson:"supportedVendorSpecificFeatures,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AanfInfo
	AanfInfoList map[string]AanfInfo `json:"aanfInfoList,omitempty" yaml:"aanfInfoList" bson:"aanfInfoList,omitempty"`
	MfafInfo     *MfafInfo           `json:"mfafInfo,omitempty" yaml:"mfafInfo" bson:"mfafInfo,omitempty"`
	// A map(list of key-value pairs) where a (unique) valid JSON string serves as key of EasdfInfo
	EasdfInfoList map[string]EasdfInfo `json:"easdfInfoList,omitempty" yaml:"easdfInfoList" bson:"easdfInfoList,omitempty"`
	DccfInfo      *DccfInfo            `json:"dccfInfo,omitempty" yaml:"dccfInfo" bson:"dccfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NsacfInfo
	NsacfInfoList map[string]NsacfInfo `json:"nsacfInfoList,omitempty" yaml:"nsacfInfoList" bson:"nsacfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbSmfInfo
	MbSmfInfoList map[string]MbSmfInfo `json:"mbSmfInfoList,omitempty" yaml:"mbSmfInfoList" bson:"mbSmfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of TsctsfInfo
	TsctsfInfoList map[string]TsctsfInfo `json:"tsctsfInfoList,omitempty" yaml:"tsctsfInfoList" bson:"tsctsfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbUpfInfo
	MbUpfInfoList map[string]MbUpfInfo `json:"mbUpfInfoList,omitempty" yaml:"mbUpfInfoList" bson:"mbUpfInfoList,omitempty"`
	TrustAfInfo   *TrustAfInfo         `json:"trustAfInfo,omitempty" yaml:"trustAfInfo" bson:"trustAfInfo,omitempty"`
	NssaafInfo    *NssaafInfo          `json:"nssaafInfo,omitempty" yaml:"nssaafInfo" bson:"nssaafInfo,omitempty"`
	HniList       []string             `json:"hniList,omitempty" yaml:"hniList" bson:"hniList,omitempty"`
	IwmscInfo     *IwmscInfo           `json:"iwmscInfo,omitempty" yaml:"iwmscInfo" bson:"iwmscInfo,omitempty"`
	MnpfInfo      *MnpfInfo            `json:"mnpfInfo,omitempty" yaml:"mnpfInfo" bson:"mnpfInfo,omitempty"`
}
