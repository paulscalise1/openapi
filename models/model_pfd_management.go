/*
 * 3gpp-pfd-management
 *
 * API for PFD management. © 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * Source file: 3GPP TS 29.122 V16.9.0 T8 reference point for Northbound APIs
 * Url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.122/
 *
 * API version: 1.1.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

type PfdManagement struct {
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Self              string `json:"self,omitempty" yaml:"self" bson:"self"`
	SupportedFeatures string `json:"supportedFeatures,omitempty" yaml:"supportedFeatures" bson:"supportedFeatures"`
	// Each element uniquely identifies the PFDs for an external application identifier. Each element is identified in the map via an external application identifier as key. The response shall include successfully provisioned PFD data of application(s).
	PfdDatas map[string]PfdPfdData `json:"pfdDatas" yaml:"pfdDatas" bson:"pfdDatas"`
	// Supplied by the SCEF and contains the external application identifiers for which PFD(s) are not added or modified successfully. The failure reason is also included. Each element provides the related information for one or more external application identifier(s) and is identified in the map via the failure identifier as key.
	PfdReports map[string]PfdReport `json:"pfdReports,omitempty" yaml:"pfdReports" bson:"pfdReports"`
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NotificationDestination string `json:"notificationDestination,omitempty" yaml:"notificationDestination" bson:"notificationDestination"`
	// Set to true by the SCS/AS to request the SCEF to send a test notification as defined in subclause 5.2.5.3. Set to false or omitted otherwise.
	RequestTestNotification bool                `json:"requestTestNotification,omitempty" yaml:"requestTestNotification" bson:"requestTestNotification"`
	WebsockNotifConfig      *WebsockNotifConfig `json:"websockNotifConfig,omitempty" yaml:"websockNotifConfig" bson:"websockNotifConfig"`
}
