/*
 * Namf_Communication
 *
 * AMF Communication Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.518 V17.12.0; 5G System; Access and Mobility Management Services
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.518/
 *
 * API version: 1.2.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package Communication

// APIClient manages communication with the Namf_Communication API v1.2.4
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	cfg    *Configuration
	common service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services
	IndividualSubscriptionDocumentApi                               *IndividualSubscriptionDocumentApiService
	IndividualUeContextDocumentApi                                  *IndividualUeContextDocumentApiService
	N1N2IndividualSubscriptionDocumentApi                           *N1N2IndividualSubscriptionDocumentApiService
	N1N2MessageCollectionCollectionApi                              *N1N2MessageCollectionCollectionApiService
	N1N2SubscriptionsCollectionForIndividualUEContextsCollectionApi *N1N2SubscriptionsCollectionForIndividualUEContextsCollectionApiService
	NonUEN2MessageNotificationIndividualSubscriptionDocumentApi     *NonUEN2MessageNotificationIndividualSubscriptionDocumentApiService
	NonUEN2MessagesCollectionCollectionApi                          *NonUEN2MessagesCollectionCollectionApiService
	NonUEN2MessagesSubscriptionsCollectionCollectionApi             *NonUEN2MessagesSubscriptionsCollectionCollectionApiService
	SubscriptionsCollectionCollectionApi                            *SubscriptionsCollectionCollectionApiService
}

type service struct {
	client *APIClient
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *Configuration) *APIClient {
	c := &APIClient{}
	c.cfg = cfg
	c.common.client = c

	// API Services
	c.IndividualSubscriptionDocumentApi = (*IndividualSubscriptionDocumentApiService)(&c.common)
	c.IndividualUeContextDocumentApi = (*IndividualUeContextDocumentApiService)(&c.common)
	c.N1N2IndividualSubscriptionDocumentApi = (*N1N2IndividualSubscriptionDocumentApiService)(&c.common)
	c.N1N2MessageCollectionCollectionApi = (*N1N2MessageCollectionCollectionApiService)(&c.common)
	c.N1N2SubscriptionsCollectionForIndividualUEContextsCollectionApi = (*N1N2SubscriptionsCollectionForIndividualUEContextsCollectionApiService)(&c.common)
	c.NonUEN2MessageNotificationIndividualSubscriptionDocumentApi = (*NonUEN2MessageNotificationIndividualSubscriptionDocumentApiService)(&c.common)
	c.NonUEN2MessagesCollectionCollectionApi = (*NonUEN2MessagesCollectionCollectionApiService)(&c.common)
	c.NonUEN2MessagesSubscriptionsCollectionCollectionApi = (*NonUEN2MessagesSubscriptionsCollectionCollectionApiService)(&c.common)
	c.SubscriptionsCollectionCollectionApi = (*SubscriptionsCollectionCollectionApiService)(&c.common)

	return c
}
