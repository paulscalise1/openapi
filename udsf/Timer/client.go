/*
 * Nudsf_Timer
 *
 * Nudsf Timer Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * Source file: 3GPP TS 29.598 UDSF Services, V17.6.0.
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.598/
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package Timer

// APIClient manages communication with the Nudsf_Timer API v1.0.0
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	cfg    *Configuration
	common service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services
	TimerGetApi     *TimerGetApiService
	TimerSearchApi  *TimerSearchApiService
	TimerStartApi   *TimerStartApiService
	TimerStopApi    *TimerStopApiService
	TimerUpdateApi  *TimerUpdateApiService
	TimersDeleteApi *TimersDeleteApiService
}

type service struct {
	client *APIClient
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *Configuration) *APIClient {
	c := &APIClient{}
	c.cfg = cfg
	c.common.client = c

	// API Services
	c.TimerGetApi = (*TimerGetApiService)(&c.common)
	c.TimerSearchApi = (*TimerSearchApiService)(&c.common)
	c.TimerStartApi = (*TimerStartApiService)(&c.common)
	c.TimerStopApi = (*TimerStopApiService)(&c.common)
	c.TimerUpdateApi = (*TimerUpdateApiService)(&c.common)
	c.TimersDeleteApi = (*TimersDeleteApiService)(&c.common)

	return c
}
